set _CHIPNAME scrv
set  _ENDIAN little

proc cpu_enable {cpu} {
    global _CHIPNAME
    irscan ${_CHIPNAME}.jrc 0x14
    drscan ${_CHIPNAME}.jrc 2 2 4 [expr {1 << $cpu} ] -endstate IDLE
}

proc cpu_disable {cpu} {
    global _CHIPNAME
    irscan ${_CHIPNAME}.jrc 0x14
    drscan ${_CHIPNAME}.jrc 2 3 4 [expr {1 << $cpu} ] -endstate IDLE
}

reset_config trst_and_srst
jtag_rclk 8
adapter_khz 1000

#
# TAP definitions after reset state
#
jtag newtap ${_CHIPNAME} cpu4 -irlen 4 -expected-id 0xc0d4deb1 -disable
jtag configure ${_CHIPNAME}.cpu4 -event tap-enable "cpu_enable 0"
jtag configure ${_CHIPNAME}.cpu4 -event tap-disable "cpu_disable 0" 

jtag newtap ${_CHIPNAME} cpu5 -irlen 4 -expected-id 0xc0d5deb1 -disable
jtag configure ${_CHIPNAME}.cpu5 -event tap-enable "cpu_enable 2"
jtag configure ${_CHIPNAME}.cpu5 -event tap-disable "cpu_disable 2" 

jtag newtap ${_CHIPNAME} jrc -irlen 5 -expected-id 0x100019cb

# Handler of setup (after scan chain configure end)
jtag configure ${_CHIPNAME}.jrc -event setup {
    global _CHIPNAME
    jtag tapenable ${_CHIPNAME}.cpu4
    jtag tapenable ${_CHIPNAME}.cpu5
}

proc init_targets {} {
    global _CHIPNAME
    target create ${_CHIPNAME}.cpu4 syntacore_riscv32i -endian little -chain-position ${_CHIPNAME}.cpu4
    target create ${_CHIPNAME}.cpu5 syntacore_riscv32i -endian little -chain-position ${_CHIPNAME}.cpu5
}
